// 将按键绑定配置放入此文件中即可覆盖默认值
[
    {
        "key": "ctrl+shift+oem_plus",
        "command": "editor.action.fontZoomIn"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "editor.action.fontZoomOut"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "alt+oem_2",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    // {
    //     "key": "ctrl+t",
    //     "command": "workbench.action.terminal.sendSequence",
    //     "args": {
    //         "text": "echo $(wslpath '${file}')\n"
    //     }
    // },
    // python this file
    {
        "key": "ctrl+k ctrl+r",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "python ${file}\n"
        }
    },
    //better align
    {
        "key": "ctrl+cmd+=",
        "command": "wwm.aligncode",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+space",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+k oem_comma",
        "command": "workbench.action.openSettings"
    },
    {
        "key": "ctrl+oem_comma",
        "command": "-workbench.action.openSettings"
    },
    {
        "key": "ctrl+g p",
        "command": "workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "ctrl+k ctrl+q",
        "command": "-workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "ctrl+g l",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "alt+right",
        "command": "cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+right",
        "command": "-cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "alt+left",
        "command": "cursorWordStartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+left",
        "command": "-cursorWordStartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+f5",
        "command": "cmake.debugTarget",
        "when": "!inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "-cmake.debugTarget",
        "when": "!inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "flutter.hotReload",
        "when": "dart-code:anyFlutterProjectLoaded && dart-code:service.reloadSources && inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "-flutter.hotReload",
        "when": "dart-code:anyFlutterProjectLoaded && dart-code:service.reloadSources && inDebugMode"
    },
    {
        "key": "alt+oem_3",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+k ctrl+oem_4",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_4",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k alt+k",
        "command": "keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "ctrl+k ctrl+oem_6",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_6",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+s",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+a",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+alt+f1",
        "command": "editor.action.showAccessibilityHelp",
        "when": "editorFocus"
    },
    {
        "key": "alt+f1",
        "command": "-editor.action.showAccessibilityHelp",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+alt+q",
        "command": "qtForPython.editTranslation"
    },
    {
        "key": "alt+q",
        "command": "qtForPython.editForm"
    },
    {
        "key": "alt+1",
        "command": "vikyd.FoldLevel.level1"
    },
    {
        "key": "alt+2",
        "command": "vikyd.FoldLevel.level2"
    },
    {
        "key": "alt+3",
        "command": "vikyd.FoldLevel.level3"
    },
    {
        "key": "alt+4",
        "command": "vikyd.FoldLevel.level4"
    },
    {
        "key": "alt+5",
        "command": "vikyd.FoldLevel.level5"
    },
    {
        "key": "alt+6",
        "command": "vikyd.FoldLevel.level6"
    },
    // ↓  optional
    {
        "key": "alt+-",
        "command": "editor.foldAll"
    },
    // ↓  optional
    {
        "key": "alt+=",
        "command": "editor.unfoldAll"
    },
    {
        "key": "ctrl+k ctrl+v",
        "command": "extension.pasteImage",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+v",
        "command": "-extension.pasteImage",
        "when": "editorTextFocus"
    }
]